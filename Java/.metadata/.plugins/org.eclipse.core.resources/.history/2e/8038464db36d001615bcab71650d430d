package exercise03;

import java.awt.List;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import exercise.Exercise;

public class Exercise03 extends Exercise{
	int numberOfTimes;
	static String[] listOfFiles;
	static File destinationDirectory;
	public Exercise03()
	{
	}
	@Override
	public void getInput()
	{
		System.out.println("Enter the number of times you want to enter the input- Max 10");
		Scanner scan=new Scanner(System.in);
		
		int numberOfTimes;
		do
		{
			numberOfTimes=scan.nextInt();
			
		}while(numberOfTimes>10);
				 
	}
	
	public void execute()
	{
		
	for(int count=0;count<numberOfTimes;count++)
	{
		System.out.println("hi");
	Folder folder=new Folder();
	folder.input();
	
	MyThread thread=new MyThread(folder);
	thread.start();
	}
	}
	public static ArrayList listDetails(File file, ArrayList list)
	{
		for(File f: file.listFiles())
		{
		if(f.isDirectory())
		{
			list.add(f.getAbsolutePath());
			listDetails(f,list);
		}
		else
		{
		list.add(f.getAbsolutePath());	
		}
		}
		
		return list;
		
	}
	public static String[] executeExercise03(Folder folder)
	{
		//File sourceDirectory= new File("C:/Users/vjnanendra/Desktop/directory1");	
		//File destinationDirectory=new File("C:/Users/vjnanendra/Desktop/directory2");
		
		File sourceDirectory=folder.getSource();
		destinationDirectory=folder.getDestination();
		folder.copyFolder(sourceDirectory,destinationDirectory);
		long start=System.currentTimeMillis();
		long end=start+100;
		while(System.currentTimeMillis()<end)
		{
			
		}
		ArrayList<String> list=new ArrayList<>();
		list=listDetails(destinationDirectory,list);
		list.toArray(listOfFiles);
		return listOfFiles;
		
	}
	public void writeOutput() throws IOException
	{
		write(destinationDirectory,"filename                                         size\r\n");
		write(destinationDirectory,"----------------------------------------------------------------\r\n");
		for(int i=0;i<listOfFiles.length;i++) {
			 
		    File file=new File(listOfFiles[i]);
		    write(file.getAbsolutePath()+"          "+file.length()+"bytes"+"\r\n");
		    
		    }
		  
	}
 
	

}
